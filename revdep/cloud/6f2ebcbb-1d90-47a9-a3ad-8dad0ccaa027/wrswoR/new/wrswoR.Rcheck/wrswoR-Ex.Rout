
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "wrswoR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('wrswoR')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("sample_int")
> ### * sample_int
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sample_int_crank
> ### Title: Weighted sampling without replacement
> ### Aliases: sample_int_crank sample_int_ccrank sample_int_expj
> ###   sample_int_expjs sample_int sample_int_R sample_int_rank
> ###   sample_int_rej
> 
> ### ** Examples
> 
> # Base R implementation
> s <- sample_int_R(2000, 1000, runif(2000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_R(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Algorithm A, Rcpp version using std::vector
> s <- sample_int_ccrank(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_ccrank(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Algorithm A, Rcpp version using R vectors
> s <- sample_int_crank(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_crank(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Algorithm A-ExpJ (with log-transformed keys)
> s <- sample_int_expj(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_expj(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Algorithm A-ExpJ (paper version)
> s <- sample_int_expjs(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_expjs(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Algorithm A
> s <- sample_int_rank(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_rank(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> ## Rejection sampling
> s <- sample_int_rej(20000, 10000, runif(20000))
> stopifnot(unique(s) == s)
> p <- c(995, rep(1, 5))
> n <- 1000
> set.seed(42)
> tbl <- table(replicate(sample_int_rej(6, 3, p),
+                        n = n)) / n
> stopifnot(abs(tbl - c(1, rep(0.4, 5))) < 0.04)
> 
> 
> 
> 
> cleanEx()
> nameEx("wrswoR-package")
> ### * wrswoR-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: wrswoR-package
> ### Title: Faster weighted sampling without replacement
> ### Aliases: wrswoR-package wrswoR
> ### Keywords: package
> 
> ### ** Examples
> 
> sample_int_rej(100, 50, 1:100)
 [1]  86  80  66  30  90  32  24  59  61  97  91  56  79  48  71  53   9  47  26
[20]  89  94 100  36  82  72  64  42  58  46  95  77  43  60  67  69  99  73  52
[39]  37  75  87  83  70  84  74  49  96  23  76  27
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.122 0.015 1.139 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
